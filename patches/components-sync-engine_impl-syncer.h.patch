diff --git a/components/sync/engine_impl/syncer.h b/components/sync/engine_impl/syncer.h
index 23b389eada81c850c3a8856678d046e599a060da..add8bd72373425029cef6cec03d1e5787afbc2c6 100644
--- a/components/sync/engine_impl/syncer.h
+++ b/components/sync/engine_impl/syncer.h
@@ -32,7 +32,7 @@ class SyncCycle;
 // A Syncer instance expects to run on a dedicated thread.  Calls to SyncShare()
 // may take an unbounded amount of time because it may block on network I/O, on
 // lock contention, or on tasks posted to other threads.
-class Syncer {
+class Syncer : public base::SupportsWeakPtr<Syncer> {
  public:
   explicit Syncer(CancelationSignal* cancelation_signal);
   virtual ~Syncer();
@@ -69,6 +69,8 @@ class Syncer {
   // otherwise.
   virtual bool PollSyncShare(ModelTypeSet request_types, SyncCycle* cycle);
 
+  void DownloadBraveRecords(SyncCycle* cycle);
+
  private:
   bool DownloadAndApplyUpdates(ModelTypeSet* request_types,
                                SyncCycle* cycle,
@@ -89,6 +91,10 @@ class Syncer {
   bool HandleCycleEnd(SyncCycle* cycle,
                       sync_pb::SyncEnums::GetUpdatesOrigin origin);
 
+  void OnGetRecords(std::unique_ptr<brave_sync::RecordsList> records);
+
+  std::unique_ptr<brave_sync::RecordsList> brave_records_;
+
   CancelationSignal* const cancelation_signal_;
 
   // Whether the syncer is in the middle of a sync attempt.
